{"ast":null,"code":"var _jsxFileName = \"/home/randell/udemy-courses/react/react-complete-guide/react-forms-inputs/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const nameInputRef = useRef();\n  const nameInputChangeHandler = e => {\n    setEnteredName(e.target.value);\n  };\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    if (enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n    setEnteredNameIsValid(true);\n    console.log(\"State - \", enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(\"Ref - \", enteredValue);\n\n    // below works but not the cleanest way to do it\n    // nameInputRef.current.value = '';\n    setEnteredName('');\n  };\n  const nameInputIsInvalid = enteredNameIsValid ? \"form-control\" : \"form-control invalid\";\n  const nameInputClasses = enteredNameIsValid ? \"form-control\" : \"form-control invalid\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        onChange: nameInputChangeHandler,\n        value: enteredName,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), !enteredNameIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"pWM+Hz7FR1moUCkHn4ulIXXR/2s=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useRef","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","enteredNameTouched","setEnteredNameTouched","nameInputRef","nameInputChangeHandler","e","target","value","formSubmissionHandler","preventDefault","trim","console","log","enteredValue","current","nameInputIsInvalid","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","ref","onChange","type","id","_c","$RefreshReg$"],"sources":["/home/randell/udemy-courses/react/react-complete-guide/react-forms-inputs/src/components/SimpleInput.js"],"sourcesContent":["import { useState, useRef } from 'react'\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const nameInputRef = useRef();\n\n  const nameInputChangeHandler = (e) => {\n    setEnteredName(e.target.value);\n  }\n\n  const formSubmissionHandler = (e) => {\n    e.preventDefault();\n\n    if(enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n\n    console.log(\"State - \", enteredName);\n\n    const enteredValue = nameInputRef.current.value;\n    console.log(\"Ref - \", enteredValue);\n\n    // below works but not the cleanest way to do it\n    // nameInputRef.current.value = '';\n    setEnteredName('');\n  }\n\n  const nameInputIsInvalid = enteredNameIsValid ? \"form-control\" : \"form-control invalid\";\n  const nameInputClasses = enteredNameIsValid ? \"form-control\" : \"form-control invalid\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input ref={nameInputRef} onChange={nameInputChangeHandler} value={enteredName} type='text' id='name' />\n        {!enteredNameIsValid && <p className=\"error-text\">Name must not be empty</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACW,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAMa,YAAY,GAAGZ,MAAM,EAAE;EAE7B,MAAMa,sBAAsB,GAAIC,CAAC,IAAK;IACpCP,cAAc,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,qBAAqB,GAAIH,CAAC,IAAK;IACnCA,CAAC,CAACI,cAAc,EAAE;IAElB,IAAGZ,WAAW,CAACa,IAAI,EAAE,KAAK,EAAE,EAAE;MAC5BV,qBAAqB,CAAC,KAAK,CAAC;MAC5B;IACF;IAEAA,qBAAqB,CAAC,IAAI,CAAC;IAE3BW,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEf,WAAW,CAAC;IAEpC,MAAMgB,YAAY,GAAGV,YAAY,CAACW,OAAO,CAACP,KAAK;IAC/CI,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEC,YAAY,CAAC;;IAEnC;IACA;IACAf,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,MAAMiB,kBAAkB,GAAGhB,kBAAkB,GAAG,cAAc,GAAG,sBAAsB;EACvF,MAAMiB,gBAAgB,GAAGjB,kBAAkB,GAAG,cAAc,GAAG,sBAAsB;EAErF,oBACEN,OAAA;IAAMwB,QAAQ,EAAET,qBAAsB;IAAAU,QAAA,gBACpCzB,OAAA;MAAK0B,SAAS,EAAEH,gBAAiB;MAAAE,QAAA,gBAC/BzB,OAAA;QAAO2B,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACvC/B,OAAA;QAAOgC,GAAG,EAAEtB,YAAa;QAACuB,QAAQ,EAAEtB,sBAAuB;QAACG,KAAK,EAAEV,WAAY;QAAC8B,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC;MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,EACvG,CAACzB,kBAAkB,iBAAIN,OAAA;QAAG0B,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAsB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxE,eACN/B,OAAA;MAAK0B,SAAS,EAAC,cAAc;MAAAD,QAAA,eAC3BzB,OAAA;QAAAyB,QAAA,EAAQ;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEX,CAAC;AAAC5B,EAAA,CA7CIF,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AA+CjB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}