{"ast":null,"code":"var _jsxFileName = \"/home/randell/udemy-courses/react/react-complete-guide/react-forms-inputs/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport useInput from '../hooks/use-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== '');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const pattern = /^[^ ]+@[^ ]+\\.[a-z]{2,3}$/;\n  const enteredEmailIsValid = enteredEmail.trim() !== '' && enteredEmail.match(pattern);\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n  const emailInputChangeHandler = e => {\n    setEnteredEmail(e.target.value);\n  };\n  const emailInputBlurHandler = e => {\n    setEnteredEmailTouched(true);\n  };\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    setEnteredEmailTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n    if (!enteredEmailIsValid) {\n      return;\n    }\n    console.log(\"Name - \", enteredName);\n    console.log(\"Email - \", enteredEmail);\n\n    // below works but not the cleanest way to do it\n    // nameInputRef.current.value = '';\n    resetNameInput();\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  };\n  const nameInputClasses = nameInputHasError && emailInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: nameChangeHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail,\n        type: \"email\",\n        id: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"VB9SJ57OEiA5yXSuc5iFfgbOa64=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","reset","resetNameInput","trim","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","pattern","enteredEmailIsValid","match","emailInputIsInvalid","formIsValid","emailInputChangeHandler","e","target","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onBlur","type","id","disabled","_c","$RefreshReg$"],"sources":["/home/randell/udemy-courses/react/react-complete-guide/react-forms-inputs/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from 'react'\nimport useInput from '../hooks/use-input';\n\nconst SimpleInput = (props) => {\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== '');\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  const pattern = /^[^ ]+@[^ ]+\\.[a-z]{2,3}$/;\n\n  const enteredEmailIsValid = enteredEmail.trim() !== '' && enteredEmail.match(pattern);\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  let formIsValid = false;\n\n  if(enteredNameIsValid && enteredEmailIsValid ) {\n    formIsValid = true;\n  }\n  \n\n  const emailInputChangeHandler = (e) => {\n    setEnteredEmail(e.target.value);\n  }\n\n  const emailInputBlurHandler = (e) => {\n    setEnteredEmailTouched(true);\n  }\n\n  const formSubmissionHandler = (e) => {\n    e.preventDefault();\n\n    setEnteredEmailTouched(true);\n\n    if(!enteredNameIsValid) {\n      return;\n    }\n\n    if(!enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(\"Name - \", enteredName);\n    console.log(\"Email - \", enteredEmail);\n\n    // below works but not the cleanest way to do it\n    // nameInputRef.current.value = '';\n    resetNameInput();\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n  }\n\n  const nameInputClasses = nameInputHasError && emailInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          onChange={nameChangeHandler}\n          onBlur={nameBlurHandler}\n          value={enteredName}\n          type='text'\n          id='name'\n        />\n        {nameInputHasError && <p className=\"error-text\">Name must not be empty</p>}\n\n        <label htmlFor='name'>Your Email</label>\n        <input\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n          type='email'\n          id='email'\n        />\n        {emailInputIsInvalid && <p className=\"error-text\">Email must not be empty</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}