{"ast":null,"code":"var _jsxFileName = \"/home/randell/udemy-courses/react/react-complete-guide/react-forms-inputs/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const pattern = /^[^ ]+@[^ ]+\\.[a-z]{2,3}$/;\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const enteredEmailIsValid = enteredEmail.trim() !== '' && enteredEmail.match(pattern);\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredNameTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n  const nameInputChangeHandler = e => {\n    setEnteredName(e.target.value);\n  };\n  const emailInputChangeHandler = e => {\n    setEnteredEmail(e.target.value);\n  };\n  const nameInputBlurHandler = e => {\n    setEnteredNameTouched(true);\n  };\n  const emailInputBlurHandler = e => {\n    setEnteredEmailTouched(true);\n  };\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n    if (!enteredEmailIsValid) {\n      return;\n    }\n    console.log(\"Name - \", enteredName);\n    console.log(\"Email - \", enteredEmail);\n\n    // below works but not the cleanest way to do it\n    // nameInputRef.current.value = '';\n    setEnteredName('');\n    setEnteredEmail('');\n    setEnteredNameTouched(false);\n  };\n  const nameInputClasses = nameInputIsInvalid && emailInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail,\n        type: \"email\",\n        id: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"xbeuRHbUOIU2iL6nDkeVWcFbgvo=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredName","setEnteredName","enteredEmail","setEnteredEmail","enteredNameTouched","setEnteredNameTouched","enteredEmailTouched","setEnteredEmailTouched","pattern","enteredNameIsValid","trim","enteredEmailIsValid","match","nameInputIsInvalid","emailInputIsInvalid","formIsValid","nameInputChangeHandler","e","target","value","emailInputChangeHandler","nameInputBlurHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onBlur","type","id","disabled","_c","$RefreshReg$"],"sources":["/home/randell/udemy-courses/react/react-complete-guide/react-forms-inputs/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from 'react'\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n\n  const pattern = /^[^ ]+@[^ ]+\\.[a-z]{2,3}$/;\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const enteredEmailIsValid = enteredEmail.trim() !== '' && enteredEmail.match(pattern);\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredNameTouched;\n\n  let formIsValid = false;\n\n  if(enteredNameIsValid) {\n    formIsValid = true;\n  }\n  \n\n  const nameInputChangeHandler = (e) => {\n    setEnteredName(e.target.value);\n  }\n\n  const emailInputChangeHandler = (e) => {\n    setEnteredEmail(e.target.value);\n  }\n\n  const nameInputBlurHandler = (e) => {\n    setEnteredNameTouched(true);\n  }\n\n  const emailInputBlurHandler = (e) => {\n    setEnteredEmailTouched(true);\n  }\n\n  const formSubmissionHandler = (e) => {\n    e.preventDefault();\n\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n\n    if(!enteredNameIsValid) {\n      return;\n    }\n\n    if(!enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(\"Name - \", enteredName);\n    console.log(\"Email - \", enteredEmail);\n\n    // below works but not the cleanest way to do it\n    // nameInputRef.current.value = '';\n    setEnteredName('');\n    setEnteredEmail('');\n    setEnteredNameTouched(false);\n  }\n\n  const nameInputClasses = nameInputIsInvalid && emailInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n          type='text'\n          id='name'\n        />\n        {nameInputIsInvalid && <p className=\"error-text\">Name must not be empty</p>}\n\n        <label htmlFor='name'>Your Email</label>\n        <input\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n          type='email'\n          id='email'\n        />\n        {emailInputIsInvalid && <p className=\"error-text\">Email must not be empty</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}