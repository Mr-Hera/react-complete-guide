{"ast":null,"code":"var _jsxFileName = \"/home/randell/udemy-courses/react/react-complete-guide/react-forms-inputs/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const enteredEmailIsValid = enteredEmail.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid || !enteredEmailIsValid && enteredNameTouched;\n  let formIsValid = false;\n  if (enteredNameIsValid) {\n    formIsValid = true;\n  }\n  const nameInputChangeHandler = e => {\n    setEnteredName(e.target.value);\n  };\n  const emailInputChangeHandler = e => {\n    setEnteredEmail(e.target.value);\n  };\n  const nameInputBlurHandler = e => {\n    setEnteredNameTouched(true);\n  };\n  const emailInputBlurHandler = e => {\n    setEnteredNameTouched(true);\n  };\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n    if (!enteredNameIsValid) {\n      return;\n    }\n    if (!enteredEmailIsValid) {\n      return;\n    }\n    console.log(\"State - \", enteredName);\n    console.log(\"State - \", enteredEmail);\n\n    // below works but not the cleanest way to do it\n    // nameInputRef.current.value = '';\n    setEnteredName('');\n    setEnteredEmail('');\n    setEnteredNameTouched(false);\n  };\n  const nameInputClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail,\n        type: \"email\",\n        id: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"6N6LPron5cxoUmkxhx2x3dngD+U=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredName","setEnteredName","enteredEmail","setEnteredEmail","enteredNameTouched","setEnteredNameTouched","enteredNameIsValid","trim","enteredEmailIsValid","nameInputIsInvalid","formIsValid","nameInputChangeHandler","e","target","value","emailInputChangeHandler","nameInputBlurHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses","emailInputClasses","emailInputIsInvalid","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onBlur","type","id","disabled","_c","$RefreshReg$"],"sources":["/home/randell/udemy-courses/react/react-complete-guide/react-forms-inputs/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from 'react'\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const enteredEmailIsValid = enteredEmail.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid || !enteredEmailIsValid && enteredNameTouched;\n\n  let formIsValid = false;\n\n  if(enteredNameIsValid) {\n    formIsValid = true;\n  }\n  \n\n  const nameInputChangeHandler = (e) => {\n    setEnteredName(e.target.value);\n  }\n\n  const emailInputChangeHandler = (e) => {\n    setEnteredEmail(e.target.value);\n  }\n\n  const nameInputBlurHandler = (e) => {\n    setEnteredNameTouched(true);\n  }\n\n  const emailInputBlurHandler = (e) => {\n    setEnteredNameTouched(true);\n  }\n\n  const formSubmissionHandler = (e) => {\n    e.preventDefault();\n\n    setEnteredNameTouched(true);\n\n    if(!enteredNameIsValid) {\n      return;\n    }\n\n    if(!enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(\"State - \", enteredName);\n    console.log(\"State - \", enteredEmail);\n\n    // below works but not the cleanest way to do it\n    // nameInputRef.current.value = '';\n    setEnteredName('');\n    setEnteredEmail('');\n    setEnteredNameTouched(false);\n  }\n\n  const nameInputClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n          type='text'\n          id='name'\n        />\n        {nameInputIsInvalid && <p className=\"error-text\">Name must not be empty</p>}\n\n        <label htmlFor='name'>Your Email</label>\n        <input\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n          type='email'\n          id='email'\n        />\n        {emailInputIsInvalid && <p className=\"error-text\">Email must not be empty</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEnE,MAAMY,kBAAkB,GAAGN,WAAW,CAACO,IAAI,EAAE,KAAK,EAAE;EACpD,MAAMC,mBAAmB,GAAGN,YAAY,CAACK,IAAI,EAAE,KAAK,EAAE;EACtD,MAAME,kBAAkB,GAAG,CAACH,kBAAkB,IAAI,CAACE,mBAAmB,IAAIJ,kBAAkB;EAE5F,IAAIM,WAAW,GAAG,KAAK;EAEvB,IAAGJ,kBAAkB,EAAE;IACrBI,WAAW,GAAG,IAAI;EACpB;EAGA,MAAMC,sBAAsB,GAAIC,CAAC,IAAK;IACpCX,cAAc,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,uBAAuB,GAAIH,CAAC,IAAK;IACrCT,eAAe,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAED,MAAME,oBAAoB,GAAIJ,CAAC,IAAK;IAClCP,qBAAqB,CAAC,IAAI,CAAC;EAC7B,CAAC;EAED,MAAMY,qBAAqB,GAAIL,CAAC,IAAK;IACnCP,qBAAqB,CAAC,IAAI,CAAC;EAC7B,CAAC;EAED,MAAMa,qBAAqB,GAAIN,CAAC,IAAK;IACnCA,CAAC,CAACO,cAAc,EAAE;IAElBd,qBAAqB,CAAC,IAAI,CAAC;IAE3B,IAAG,CAACC,kBAAkB,EAAE;MACtB;IACF;IAEA,IAAG,CAACE,mBAAmB,EAAE;MACvB;IACF;IAEAY,OAAO,CAACC,GAAG,CAAC,UAAU,EAAErB,WAAW,CAAC;IACpCoB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEnB,YAAY,CAAC;;IAErC;IACA;IACAD,cAAc,CAAC,EAAE,CAAC;IAClBE,eAAe,CAAC,EAAE,CAAC;IACnBE,qBAAqB,CAAC,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMiB,gBAAgB,GAAGb,kBAAkB,GAAG,sBAAsB,GAAG,cAAc;EACrF,MAAMc,iBAAiB,GAAGC,mBAAmB,GAAG,sBAAsB,GAAG,cAAc;EAEvF,oBACE5B,OAAA;IAAM6B,QAAQ,EAAEP,qBAAsB;IAAAQ,QAAA,gBACpC9B,OAAA;MAAK+B,SAAS,EAAEL,gBAAiB;MAAAI,QAAA,gBAC/B9B,OAAA;QAAOgC,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACvCpC,OAAA;QACEqC,QAAQ,EAAEtB,sBAAuB;QACjCuB,MAAM,EAAElB,oBAAqB;QAC7BF,KAAK,EAAEd,WAAY;QACnBmC,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC;MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACT,EACDvB,kBAAkB,iBAAIb,OAAA;QAAG+B,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAsB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eAE3EpC,OAAA;QAAOgC,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACxCpC,OAAA;QACEqC,QAAQ,EAAElB,uBAAwB;QAClCmB,MAAM,EAAEjB,qBAAsB;QAC9BH,KAAK,EAAEZ,YAAa;QACpBiC,IAAI,EAAC,OAAO;QACZC,EAAE,EAAC;MAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACV,EACDR,mBAAmB,iBAAI5B,OAAA;QAAG+B,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAuB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzE,eACNpC,OAAA;MAAK+B,SAAS,EAAC,cAAc;MAAAD,QAAA,eAC3B9B,OAAA;QAAQyC,QAAQ,EAAE,CAAC3B,WAAY;QAAAgB,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEX,CAAC;AAACjC,EAAA,CAtFIF,WAAW;AAAAyC,EAAA,GAAXzC,WAAW;AAwFjB,eAAeA,WAAW;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}