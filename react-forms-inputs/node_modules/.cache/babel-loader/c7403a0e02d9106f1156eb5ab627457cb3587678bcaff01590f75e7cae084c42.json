{"ast":null,"code":"var _jsxFileName = \"/home/randell/udemy-courses/react/react-complete-guide/react-forms-inputs/src/components/BasicForm.js\",\n  _s = $RefreshSig$();\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isNotEmpty = value => value.trim() !== '';\nconst isEmail = value => value.match(/^[^ ]+@[^ ]+\\.[a-z]{2,3}$/);\nconst BasicForm = props => {\n  _s();\n  const {\n    value: firstNameValue,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName\n  } = useInput(isNotEmpty);\n  const {\n    value: lastNameValue,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName\n  } = useInput(isNotEmpty);\n  const {\n    value: emailValue,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput(isEmail);\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    if (!firstNameIsValid) {\n      return;\n    }\n    if (!lastNameIsValid) {\n      return;\n    }\n    if (!emailIsValid) {\n      return;\n    }\n    console.log(\"Submitted!\");\n    console.log(firstNameValue, lastNameValue, emailValue);\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  };\n  let formIsValid = false;\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n  const nameInputClasses = firstNameHasError && lastNameHasError && enteredEmailHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstname\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"firstname\",\n          value: firstNameValue,\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), firstNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"First Name must be valid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: nameInputClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastname\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastname\",\n          value: lastNameValue,\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), lastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Last Name must be valid\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: emailValue,\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must be valid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"ouKgKqU0oQKg5rizQJvAGshEWcs=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useInput","jsxDEV","_jsxDEV","isNotEmpty","value","trim","isEmail","match","BasicForm","props","_s","firstNameValue","isValid","firstNameIsValid","hasError","firstNameHasError","valueChangeHandler","firstNameChangeHandler","inputBlurHandler","firstNameBlurHandler","reset","resetFirstName","lastNameValue","lastNameIsValid","lastNameHasError","lastNameChangeHandler","lastNameBlurHandler","resetLastName","emailValue","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","resetEmail","handleFormSubmit","e","preventDefault","console","log","formIsValid","nameInputClasses","enteredEmailHasError","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["/home/randell/udemy-courses/react/react-complete-guide/react-forms-inputs/src/components/BasicForm.js"],"sourcesContent":["import useInput from \"../hooks/use-input\";\n\nconst isNotEmpty = value => value.trim() !== '';\nconst isEmail = value => value.match(/^[^ ]+@[^ ]+\\.[a-z]{2,3}$/);\n\nconst BasicForm = (props) => {\n  const {\n    value: firstNameValue,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName\n  } = useInput(isNotEmpty);\n\n  const {\n    value: lastNameValue,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName\n  } = useInput(isNotEmpty);\n\n  const {\n    value: emailValue,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput(isEmail);\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    if(!firstNameIsValid) {\n      return;\n    }\n\n    if(!lastNameIsValid) {\n      return;\n    }\n\n    if(!emailIsValid) {\n      return;\n    }\n\n    console.log(\"Submitted!\");\n    console.log(firstNameValue, lastNameValue, emailValue);\n\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  }\n\n  let formIsValid = false;\n\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const nameInputClasses = firstNameHasError && lastNameHasError && enteredEmailHasError ? \"form-control invalid\" : \"form-control\";\n\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <div className='control-group'>\n        <div className={nameInputClasses}>\n          <label htmlFor='firstname'>First Name</label>\n          <input\n            type='text'\n            id='firstname'\n            value={firstNameValue}\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n          />\n          {firstNameHasError && <p className=\"error-text\">First Name must be valid</p>}\n        </div>\n        <div className={nameInputClasses}>\n          <label htmlFor='lastname'>Last Name</label>\n          <input\n            type='text'\n            id='lastname'\n            value={lastNameValue}\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler}\n          />\n          {lastNameHasError && <p className=\"error-text\">Last Name must be valid</p>}\n        </div>\n      </div>\n      <div className={nameInputClasses}>\n        <label htmlFor='email'>E-Mail Address</label>\n        <input\n          type='email'\n          id='email'\n          value={emailValue}\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n        />\n        {emailHasError && <p className=\"error-text\">Email must be valid</p>}\n      </div>\n      <div className='form-actions'>\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}