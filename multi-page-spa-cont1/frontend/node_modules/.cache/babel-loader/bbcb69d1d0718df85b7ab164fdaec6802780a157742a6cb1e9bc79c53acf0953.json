{"ast":null,"code":"var _jsxFileName = \"/home/randell/udemy-courses/react/react-complete-guide/multi-page-spa-cont1/frontend/src/pages/NewEvent.js\";\nimport React from 'react';\nimport { EventForm } from '../components';\nimport { json } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action(_ref) {\n  let {\n    request,\n    action\n  } = _ref;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('name'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not save event.'\n    }, {\n      status: 500\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["React","EventForm","json","jsxDEV","_jsxDEV","Fragment","_Fragment","NewEventPage","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","_ref","request","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","message","status","$RefreshReg$"],"sources":["/home/randell/udemy-courses/react/react-complete-guide/multi-page-spa-cont1/frontend/src/pages/NewEvent.js"],"sourcesContent":["import React from 'react'\nimport { EventForm } from '../components'\nimport { json } from 'react-router-dom'\n\nconst NewEventPage = () => {\n  return (\n    <>\n      <EventForm />\n    </>\n  )\n}\n\nexport default NewEventPage\n\nexport async function action({ request, action }) {\n\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('name'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description'),\n  };\n  \n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'content-Type': 'application/json',\n    },\n    body: JSON.stringify(eventData),\n  })\n\n  if(!response.ok) {\n    throw json({ message: 'Could not save event.' }, { status: 500 })\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,eAAe;AACzC,SAASC,IAAI,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACEJ,OAAA,CAACH,SAAS;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACb,CAAC;AAEP,CAAC;AAAAC,EAAA,GANKN,YAAY;AAQlB,eAAeA,YAAY;AAE3B,OAAO,eAAeO,MAAMA,CAAAC,IAAA,EAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEF;EAAO,CAAC,GAAAC,IAAA;EAE9C,MAAME,IAAI,GAAG,MAAMD,OAAO,CAACE,QAAQ,CAAC,CAAC;EACrC,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACvBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACrC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC3DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAChC,CAAC,CAAC;EAEF,IAAG,CAACM,QAAQ,CAACO,EAAE,EAAE;IACf,MAAM9B,IAAI,CAAC;MAAE+B,OAAO,EAAE;IAAwB,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACnE;AACF;AAAC,IAAArB,EAAA;AAAAsB,YAAA,CAAAtB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}