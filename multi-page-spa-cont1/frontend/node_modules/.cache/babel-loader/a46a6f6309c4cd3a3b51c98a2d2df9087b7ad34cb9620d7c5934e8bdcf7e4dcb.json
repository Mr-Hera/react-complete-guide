{"ast":null,"code":"var _jsxFileName = \"/home/randell/udemy-courses/react/react-complete-guide/multi-page-spa-cont1/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport { EventsRootLayout, RootLayout, ErrorPage, HomePage, EventsPage, EventDetailPage, NewEventPage, EditEventPage, eventsLoader, eventDetailLoader, newEventAction } from './pages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 14\n  }, this),\n  errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 19\n  }, this),\n  children: [{\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 30\n    }, this)\n  }, {\n    path: 'events',\n    element: /*#__PURE__*/_jsxDEV(EventsRootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 18\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 34\n      }, this),\n      loader: eventsLoader\n    }, {\n      path: ':id',\n      id: 'event-detail',\n      loader: eventDetailLoader,\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 38\n        }, this),\n        action\n      }, {\n        path: 'edit',\n        element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 39\n        }, this)\n      }]\n    }, {\n      path: 'new',\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 34\n      }, this),\n      action: newEventAction\n    }]\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","EventsRootLayout","RootLayout","ErrorPage","HomePage","EventsPage","EventDetailPage","NewEventPage","EditEventPage","eventsLoader","eventDetailLoader","newEventAction","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","loader","id","action","App","_c","$RefreshReg$"],"sources":["/home/randell/udemy-courses/react/react-complete-guide/multi-page-spa-cont1/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom'\nimport { EventsRootLayout, RootLayout, ErrorPage, HomePage, EventsPage, EventDetailPage, NewEventPage, EditEventPage, eventsLoader, eventDetailLoader, newEventAction } from './pages'\n\nconst router = createBrowserRouter([\n  {\n    path: '/',\n    element: <RootLayout />,\n    errorElement: <ErrorPage />,\n    children: [\n      {index: true, element: <HomePage />},\n      { path: 'events',\n        element: <EventsRootLayout />,\n        children: [\n          {index: true, element: <EventsPage />, loader: eventsLoader},\n          { path: ':id',\n            id: 'event-detail',\n            loader: eventDetailLoader,\n            children: [\n              {index: true, element: <EventDetailPage />, action },\n              {path: 'edit', element: <EditEventPage />},\n            ],\n          },\n          \n          {path: 'new', element: <NewEventPage />, action: newEventAction},\n        ],\n      },\n    ],\n  }\n]);\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,SAASC,gBAAgB,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,eAAe,EAAEC,YAAY,EAAEC,aAAa,EAAEC,YAAY,EAAEC,iBAAiB,EAAEC,cAAc,QAAQ,SAAS;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtL,MAAMC,MAAM,GAAGf,mBAAmB,CAAC,CACjC;EACEgB,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEH,OAAA,CAACX,UAAU;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACvBC,YAAY,eAAER,OAAA,CAACV,SAAS;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAC3BE,QAAQ,EAAE,CACR;IAACC,KAAK,EAAE,IAAI;IAAEP,OAAO,eAAEH,OAAA,CAACT,QAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,CAAC,EACpC;IAAEL,IAAI,EAAE,QAAQ;IACdC,OAAO,eAAEH,OAAA,CAACZ,gBAAgB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC7BE,QAAQ,EAAE,CACR;MAACC,KAAK,EAAE,IAAI;MAAEP,OAAO,eAAEH,OAAA,CAACR,UAAU;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAAEI,MAAM,EAAEf;IAAY,CAAC,EAC5D;MAAEM,IAAI,EAAE,KAAK;MACXU,EAAE,EAAE,cAAc;MAClBD,MAAM,EAAEd,iBAAiB;MACzBY,QAAQ,EAAE,CACR;QAACC,KAAK,EAAE,IAAI;QAAEP,OAAO,eAAEH,OAAA,CAACP,eAAe;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QAAEM;MAAO,CAAC,EACpD;QAACX,IAAI,EAAE,MAAM;QAAEC,OAAO,eAAEH,OAAA,CAACL,aAAa;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,CAAC;IAE9C,CAAC,EAED;MAACL,IAAI,EAAE,KAAK;MAAEC,OAAO,eAAEH,OAAA,CAACN,YAAY;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAAEM,MAAM,EAAEf;IAAc,CAAC;EAEpE,CAAC;AAEL,CAAC,CACF,CAAC;AAEF,SAASgB,GAAGA,CAAA,EAAG;EACb,oBAAOd,OAAA,CAACb,cAAc;IAACc,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACQ,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}