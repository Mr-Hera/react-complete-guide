{"ast":null,"code":"var _jsxFileName = \"/home/randell/udemy-courses/react/react-complete-guide/multi-page-spa-cont1/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  if (data.isError) {\n    return data.me;\n  }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    return {\n      isError: true,\n      message: 'Could not fetch events.'\n    };\n  } else {\n    return response;\n  }\n}\n;\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","isError","me","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","message","$RefreshReg$"],"sources":["/home/randell/udemy-courses/react/react-complete-guide/multi-page-spa-cont1/frontend/src/pages/Events.js"],"sourcesContent":["import { useLoaderData } from 'react-router-dom';\n\nimport EventsList from '../components/EventsList';\n\nfunction EventsPage() {\n  const data = useLoaderData();\n\n  if(data.isError) {\n    return data.me\n  }\n  const events = data.events;\n  return (\n    <>\n      <EventsList events={events} />\n    </>\n  );\n}\n\nexport default EventsPage;\n\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n\n  if (!response.ok) {\n    return {isError: true, message: 'Could not fetch events.'};\n  } else {\n    return response;\n  }\n};"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAEhD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC;EAE5B,IAAGQ,IAAI,CAACC,OAAO,EAAE;IACf,OAAOD,IAAI,CAACE,EAAE;EAChB;EACA,MAAMC,MAAM,GAAGH,IAAI,CAACG,MAAM;EAC1B,oBACER,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA,CAACF,UAAU;MAACU,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC9B,CAAC;AAEP;AAACT,EAAA,CAZQD,UAAU;EAAA,QACJN,aAAa;AAAA;AAAAiB,EAAA,GADnBX,UAAU;AAcnB,eAAeA,UAAU;AAEzB,OAAO,eAAeY,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAO;MAACZ,OAAO,EAAE,IAAI;MAAEa,OAAO,EAAE;IAAyB,CAAC;EAC5D,CAAC,MAAM;IACL,OAAOH,QAAQ;EACjB;AACF;AAAC;AAAC,IAAAF,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}