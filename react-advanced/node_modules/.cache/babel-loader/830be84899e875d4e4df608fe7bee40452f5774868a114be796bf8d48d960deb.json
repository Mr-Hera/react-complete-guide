{"ast":null,"code":"var _jsxFileName = \"/home/randell/udemy-courses/react/react-complete-guide/react-advanced/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n      if (storedUserLoggedInInformation === '1') {\n        setIsLoggedIn(true);\n      }\n    }, 500);\n    return () => {\n      clearTimeout(identifier);\n    };\n  }, []);\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: false\n    },\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      isAuthenticated: isLoggedIn,\n      onLogout: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Home","MainHeader","AuthContext","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","identifier","setTimeout","storedUserLoggedInInformation","localStorage","getItem","clearTimeout","loginHandler","email","password","setItem","logoutHandler","removeItem","Provider","value","children","isAuthenticated","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["/home/randell/udemy-courses/react/react-complete-guide/react-advanced/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-context';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n\n    const identifier = setTimeout(() => {\n      const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n\n      if(storedUserLoggedInInformation === '1') {\n        setIsLoggedIn(true);\n      }\n    }, 500);\n    \n    return () => {\n      clearTimeout(identifier)\n    }\n\n  }, []);\n\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn: false }}>\n      <MainHeader isAuthenticated={isLoggedIn} onLogout={logoutHandler} />\n      <main>\n        {!isLoggedIn && <Login onLogin={loginHandler} />}\n        {isLoggedIn && <Home onLogout={logoutHandler} />}\n      </main>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,WAAW,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IAEd,MAAMW,UAAU,GAAGC,UAAU,CAAC,MAAM;MAClC,MAAMC,6BAA6B,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;MAExE,IAAGF,6BAA6B,KAAK,GAAG,EAAE;QACxCH,aAAa,CAAC,IAAI,CAAC;MACrB;IACF,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAM;MACXM,YAAY,CAACL,UAAU,CAAC;IAC1B,CAAC;EAEH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,YAAY,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACxC;IACA;IACAL,YAAY,CAACM,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC;IACvCV,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMW,aAAa,GAAGA,CAAA,KAAM;IAC1BP,YAAY,CAACQ,UAAU,CAAC,YAAY,CAAC;IACrCZ,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEJ,OAAA,CAACF,WAAW,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEf,UAAU,EAAE;IAAM,CAAE;IAAAgB,QAAA,gBACjDnB,OAAA,CAACH,UAAU;MAACuB,eAAe,EAAEjB,UAAW;MAACkB,QAAQ,EAAEN;IAAc;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACpEzB,OAAA;MAAAmB,QAAA,GACG,CAAChB,UAAU,iBAAIH,OAAA,CAACL,KAAK;QAAC+B,OAAO,EAAEf;MAAa;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,EAC/CtB,UAAU,iBAAIH,OAAA,CAACJ,IAAI;QAACyB,QAAQ,EAAEN;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACc;AAE3B;AAACvB,EAAA,CAxCQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}